// Code generated by mockery v1.0.0
package route53iface

import aws "github.com/aws/aws-sdk-go-v2/aws"
import mock "github.com/stretchr/testify/mock"

import route53 "github.com/aws/aws-sdk-go-v2/service/route53"

// Route53API is an autogenerated mock type for the Route53API type
type Route53API struct {
	mock.Mock
}

// AssociateVPCWithHostedZoneRequest provides a mock function with given fields: _a0
func (_m *Route53API) AssociateVPCWithHostedZoneRequest(_a0 *route53.AssociateVPCWithHostedZoneInput) route53.AssociateVPCWithHostedZoneRequest {
	ret := _m.Called(_a0)

	var r0 route53.AssociateVPCWithHostedZoneRequest
	if rf, ok := ret.Get(0).(func(*route53.AssociateVPCWithHostedZoneInput) route53.AssociateVPCWithHostedZoneRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.AssociateVPCWithHostedZoneRequest)
	}

	return r0
}

// ChangeResourceRecordSetsRequest provides a mock function with given fields: _a0
func (_m *Route53API) ChangeResourceRecordSetsRequest(_a0 *route53.ChangeResourceRecordSetsInput) route53.ChangeResourceRecordSetsRequest {
	ret := _m.Called(_a0)

	var r0 route53.ChangeResourceRecordSetsRequest
	if rf, ok := ret.Get(0).(func(*route53.ChangeResourceRecordSetsInput) route53.ChangeResourceRecordSetsRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ChangeResourceRecordSetsRequest)
	}

	return r0
}

// ChangeTagsForResourceRequest provides a mock function with given fields: _a0
func (_m *Route53API) ChangeTagsForResourceRequest(_a0 *route53.ChangeTagsForResourceInput) route53.ChangeTagsForResourceRequest {
	ret := _m.Called(_a0)

	var r0 route53.ChangeTagsForResourceRequest
	if rf, ok := ret.Get(0).(func(*route53.ChangeTagsForResourceInput) route53.ChangeTagsForResourceRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ChangeTagsForResourceRequest)
	}

	return r0
}

// CreateHealthCheckRequest provides a mock function with given fields: _a0
func (_m *Route53API) CreateHealthCheckRequest(_a0 *route53.CreateHealthCheckInput) route53.CreateHealthCheckRequest {
	ret := _m.Called(_a0)

	var r0 route53.CreateHealthCheckRequest
	if rf, ok := ret.Get(0).(func(*route53.CreateHealthCheckInput) route53.CreateHealthCheckRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.CreateHealthCheckRequest)
	}

	return r0
}

// CreateHostedZoneRequest provides a mock function with given fields: _a0
func (_m *Route53API) CreateHostedZoneRequest(_a0 *route53.CreateHostedZoneInput) route53.CreateHostedZoneRequest {
	ret := _m.Called(_a0)

	var r0 route53.CreateHostedZoneRequest
	if rf, ok := ret.Get(0).(func(*route53.CreateHostedZoneInput) route53.CreateHostedZoneRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.CreateHostedZoneRequest)
	}

	return r0
}

// CreateQueryLoggingConfigRequest provides a mock function with given fields: _a0
func (_m *Route53API) CreateQueryLoggingConfigRequest(_a0 *route53.CreateQueryLoggingConfigInput) route53.CreateQueryLoggingConfigRequest {
	ret := _m.Called(_a0)

	var r0 route53.CreateQueryLoggingConfigRequest
	if rf, ok := ret.Get(0).(func(*route53.CreateQueryLoggingConfigInput) route53.CreateQueryLoggingConfigRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.CreateQueryLoggingConfigRequest)
	}

	return r0
}

// CreateReusableDelegationSetRequest provides a mock function with given fields: _a0
func (_m *Route53API) CreateReusableDelegationSetRequest(_a0 *route53.CreateReusableDelegationSetInput) route53.CreateReusableDelegationSetRequest {
	ret := _m.Called(_a0)

	var r0 route53.CreateReusableDelegationSetRequest
	if rf, ok := ret.Get(0).(func(*route53.CreateReusableDelegationSetInput) route53.CreateReusableDelegationSetRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.CreateReusableDelegationSetRequest)
	}

	return r0
}

// CreateTrafficPolicyInstanceRequest provides a mock function with given fields: _a0
func (_m *Route53API) CreateTrafficPolicyInstanceRequest(_a0 *route53.CreateTrafficPolicyInstanceInput) route53.CreateTrafficPolicyInstanceRequest {
	ret := _m.Called(_a0)

	var r0 route53.CreateTrafficPolicyInstanceRequest
	if rf, ok := ret.Get(0).(func(*route53.CreateTrafficPolicyInstanceInput) route53.CreateTrafficPolicyInstanceRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.CreateTrafficPolicyInstanceRequest)
	}

	return r0
}

// CreateTrafficPolicyRequest provides a mock function with given fields: _a0
func (_m *Route53API) CreateTrafficPolicyRequest(_a0 *route53.CreateTrafficPolicyInput) route53.CreateTrafficPolicyRequest {
	ret := _m.Called(_a0)

	var r0 route53.CreateTrafficPolicyRequest
	if rf, ok := ret.Get(0).(func(*route53.CreateTrafficPolicyInput) route53.CreateTrafficPolicyRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.CreateTrafficPolicyRequest)
	}

	return r0
}

// CreateTrafficPolicyVersionRequest provides a mock function with given fields: _a0
func (_m *Route53API) CreateTrafficPolicyVersionRequest(_a0 *route53.CreateTrafficPolicyVersionInput) route53.CreateTrafficPolicyVersionRequest {
	ret := _m.Called(_a0)

	var r0 route53.CreateTrafficPolicyVersionRequest
	if rf, ok := ret.Get(0).(func(*route53.CreateTrafficPolicyVersionInput) route53.CreateTrafficPolicyVersionRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.CreateTrafficPolicyVersionRequest)
	}

	return r0
}

// CreateVPCAssociationAuthorizationRequest provides a mock function with given fields: _a0
func (_m *Route53API) CreateVPCAssociationAuthorizationRequest(_a0 *route53.CreateVPCAssociationAuthorizationInput) route53.CreateVPCAssociationAuthorizationRequest {
	ret := _m.Called(_a0)

	var r0 route53.CreateVPCAssociationAuthorizationRequest
	if rf, ok := ret.Get(0).(func(*route53.CreateVPCAssociationAuthorizationInput) route53.CreateVPCAssociationAuthorizationRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.CreateVPCAssociationAuthorizationRequest)
	}

	return r0
}

// DeleteHealthCheckRequest provides a mock function with given fields: _a0
func (_m *Route53API) DeleteHealthCheckRequest(_a0 *route53.DeleteHealthCheckInput) route53.DeleteHealthCheckRequest {
	ret := _m.Called(_a0)

	var r0 route53.DeleteHealthCheckRequest
	if rf, ok := ret.Get(0).(func(*route53.DeleteHealthCheckInput) route53.DeleteHealthCheckRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.DeleteHealthCheckRequest)
	}

	return r0
}

// DeleteHostedZoneRequest provides a mock function with given fields: _a0
func (_m *Route53API) DeleteHostedZoneRequest(_a0 *route53.DeleteHostedZoneInput) route53.DeleteHostedZoneRequest {
	ret := _m.Called(_a0)

	var r0 route53.DeleteHostedZoneRequest
	if rf, ok := ret.Get(0).(func(*route53.DeleteHostedZoneInput) route53.DeleteHostedZoneRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.DeleteHostedZoneRequest)
	}

	return r0
}

// DeleteQueryLoggingConfigRequest provides a mock function with given fields: _a0
func (_m *Route53API) DeleteQueryLoggingConfigRequest(_a0 *route53.DeleteQueryLoggingConfigInput) route53.DeleteQueryLoggingConfigRequest {
	ret := _m.Called(_a0)

	var r0 route53.DeleteQueryLoggingConfigRequest
	if rf, ok := ret.Get(0).(func(*route53.DeleteQueryLoggingConfigInput) route53.DeleteQueryLoggingConfigRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.DeleteQueryLoggingConfigRequest)
	}

	return r0
}

// DeleteReusableDelegationSetRequest provides a mock function with given fields: _a0
func (_m *Route53API) DeleteReusableDelegationSetRequest(_a0 *route53.DeleteReusableDelegationSetInput) route53.DeleteReusableDelegationSetRequest {
	ret := _m.Called(_a0)

	var r0 route53.DeleteReusableDelegationSetRequest
	if rf, ok := ret.Get(0).(func(*route53.DeleteReusableDelegationSetInput) route53.DeleteReusableDelegationSetRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.DeleteReusableDelegationSetRequest)
	}

	return r0
}

// DeleteTrafficPolicyInstanceRequest provides a mock function with given fields: _a0
func (_m *Route53API) DeleteTrafficPolicyInstanceRequest(_a0 *route53.DeleteTrafficPolicyInstanceInput) route53.DeleteTrafficPolicyInstanceRequest {
	ret := _m.Called(_a0)

	var r0 route53.DeleteTrafficPolicyInstanceRequest
	if rf, ok := ret.Get(0).(func(*route53.DeleteTrafficPolicyInstanceInput) route53.DeleteTrafficPolicyInstanceRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.DeleteTrafficPolicyInstanceRequest)
	}

	return r0
}

// DeleteTrafficPolicyRequest provides a mock function with given fields: _a0
func (_m *Route53API) DeleteTrafficPolicyRequest(_a0 *route53.DeleteTrafficPolicyInput) route53.DeleteTrafficPolicyRequest {
	ret := _m.Called(_a0)

	var r0 route53.DeleteTrafficPolicyRequest
	if rf, ok := ret.Get(0).(func(*route53.DeleteTrafficPolicyInput) route53.DeleteTrafficPolicyRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.DeleteTrafficPolicyRequest)
	}

	return r0
}

// DeleteVPCAssociationAuthorizationRequest provides a mock function with given fields: _a0
func (_m *Route53API) DeleteVPCAssociationAuthorizationRequest(_a0 *route53.DeleteVPCAssociationAuthorizationInput) route53.DeleteVPCAssociationAuthorizationRequest {
	ret := _m.Called(_a0)

	var r0 route53.DeleteVPCAssociationAuthorizationRequest
	if rf, ok := ret.Get(0).(func(*route53.DeleteVPCAssociationAuthorizationInput) route53.DeleteVPCAssociationAuthorizationRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.DeleteVPCAssociationAuthorizationRequest)
	}

	return r0
}

// DisassociateVPCFromHostedZoneRequest provides a mock function with given fields: _a0
func (_m *Route53API) DisassociateVPCFromHostedZoneRequest(_a0 *route53.DisassociateVPCFromHostedZoneInput) route53.DisassociateVPCFromHostedZoneRequest {
	ret := _m.Called(_a0)

	var r0 route53.DisassociateVPCFromHostedZoneRequest
	if rf, ok := ret.Get(0).(func(*route53.DisassociateVPCFromHostedZoneInput) route53.DisassociateVPCFromHostedZoneRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.DisassociateVPCFromHostedZoneRequest)
	}

	return r0
}

// GetAccountLimitRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetAccountLimitRequest(_a0 *route53.GetAccountLimitInput) route53.GetAccountLimitRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetAccountLimitRequest
	if rf, ok := ret.Get(0).(func(*route53.GetAccountLimitInput) route53.GetAccountLimitRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetAccountLimitRequest)
	}

	return r0
}

// GetChangeRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetChangeRequest(_a0 *route53.GetChangeInput) route53.GetChangeRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetChangeRequest
	if rf, ok := ret.Get(0).(func(*route53.GetChangeInput) route53.GetChangeRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetChangeRequest)
	}

	return r0
}

// GetCheckerIpRangesRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetCheckerIpRangesRequest(_a0 *route53.GetCheckerIpRangesInput) route53.GetCheckerIpRangesRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetCheckerIpRangesRequest
	if rf, ok := ret.Get(0).(func(*route53.GetCheckerIpRangesInput) route53.GetCheckerIpRangesRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetCheckerIpRangesRequest)
	}

	return r0
}

// GetGeoLocationRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetGeoLocationRequest(_a0 *route53.GetGeoLocationInput) route53.GetGeoLocationRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetGeoLocationRequest
	if rf, ok := ret.Get(0).(func(*route53.GetGeoLocationInput) route53.GetGeoLocationRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetGeoLocationRequest)
	}

	return r0
}

// GetHealthCheckCountRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetHealthCheckCountRequest(_a0 *route53.GetHealthCheckCountInput) route53.GetHealthCheckCountRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetHealthCheckCountRequest
	if rf, ok := ret.Get(0).(func(*route53.GetHealthCheckCountInput) route53.GetHealthCheckCountRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetHealthCheckCountRequest)
	}

	return r0
}

// GetHealthCheckLastFailureReasonRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetHealthCheckLastFailureReasonRequest(_a0 *route53.GetHealthCheckLastFailureReasonInput) route53.GetHealthCheckLastFailureReasonRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetHealthCheckLastFailureReasonRequest
	if rf, ok := ret.Get(0).(func(*route53.GetHealthCheckLastFailureReasonInput) route53.GetHealthCheckLastFailureReasonRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetHealthCheckLastFailureReasonRequest)
	}

	return r0
}

// GetHealthCheckRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetHealthCheckRequest(_a0 *route53.GetHealthCheckInput) route53.GetHealthCheckRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetHealthCheckRequest
	if rf, ok := ret.Get(0).(func(*route53.GetHealthCheckInput) route53.GetHealthCheckRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetHealthCheckRequest)
	}

	return r0
}

// GetHealthCheckStatusRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetHealthCheckStatusRequest(_a0 *route53.GetHealthCheckStatusInput) route53.GetHealthCheckStatusRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetHealthCheckStatusRequest
	if rf, ok := ret.Get(0).(func(*route53.GetHealthCheckStatusInput) route53.GetHealthCheckStatusRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetHealthCheckStatusRequest)
	}

	return r0
}

// GetHostedZoneCountRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetHostedZoneCountRequest(_a0 *route53.GetHostedZoneCountInput) route53.GetHostedZoneCountRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetHostedZoneCountRequest
	if rf, ok := ret.Get(0).(func(*route53.GetHostedZoneCountInput) route53.GetHostedZoneCountRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetHostedZoneCountRequest)
	}

	return r0
}

// GetHostedZoneLimitRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetHostedZoneLimitRequest(_a0 *route53.GetHostedZoneLimitInput) route53.GetHostedZoneLimitRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetHostedZoneLimitRequest
	if rf, ok := ret.Get(0).(func(*route53.GetHostedZoneLimitInput) route53.GetHostedZoneLimitRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetHostedZoneLimitRequest)
	}

	return r0
}

// GetHostedZoneRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetHostedZoneRequest(_a0 *route53.GetHostedZoneInput) route53.GetHostedZoneRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetHostedZoneRequest
	if rf, ok := ret.Get(0).(func(*route53.GetHostedZoneInput) route53.GetHostedZoneRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetHostedZoneRequest)
	}

	return r0
}

// GetQueryLoggingConfigRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetQueryLoggingConfigRequest(_a0 *route53.GetQueryLoggingConfigInput) route53.GetQueryLoggingConfigRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetQueryLoggingConfigRequest
	if rf, ok := ret.Get(0).(func(*route53.GetQueryLoggingConfigInput) route53.GetQueryLoggingConfigRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetQueryLoggingConfigRequest)
	}

	return r0
}

// GetReusableDelegationSetLimitRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetReusableDelegationSetLimitRequest(_a0 *route53.GetReusableDelegationSetLimitInput) route53.GetReusableDelegationSetLimitRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetReusableDelegationSetLimitRequest
	if rf, ok := ret.Get(0).(func(*route53.GetReusableDelegationSetLimitInput) route53.GetReusableDelegationSetLimitRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetReusableDelegationSetLimitRequest)
	}

	return r0
}

// GetReusableDelegationSetRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetReusableDelegationSetRequest(_a0 *route53.GetReusableDelegationSetInput) route53.GetReusableDelegationSetRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetReusableDelegationSetRequest
	if rf, ok := ret.Get(0).(func(*route53.GetReusableDelegationSetInput) route53.GetReusableDelegationSetRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetReusableDelegationSetRequest)
	}

	return r0
}

// GetTrafficPolicyInstanceCountRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetTrafficPolicyInstanceCountRequest(_a0 *route53.GetTrafficPolicyInstanceCountInput) route53.GetTrafficPolicyInstanceCountRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetTrafficPolicyInstanceCountRequest
	if rf, ok := ret.Get(0).(func(*route53.GetTrafficPolicyInstanceCountInput) route53.GetTrafficPolicyInstanceCountRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetTrafficPolicyInstanceCountRequest)
	}

	return r0
}

// GetTrafficPolicyInstanceRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetTrafficPolicyInstanceRequest(_a0 *route53.GetTrafficPolicyInstanceInput) route53.GetTrafficPolicyInstanceRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetTrafficPolicyInstanceRequest
	if rf, ok := ret.Get(0).(func(*route53.GetTrafficPolicyInstanceInput) route53.GetTrafficPolicyInstanceRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetTrafficPolicyInstanceRequest)
	}

	return r0
}

// GetTrafficPolicyRequest provides a mock function with given fields: _a0
func (_m *Route53API) GetTrafficPolicyRequest(_a0 *route53.GetTrafficPolicyInput) route53.GetTrafficPolicyRequest {
	ret := _m.Called(_a0)

	var r0 route53.GetTrafficPolicyRequest
	if rf, ok := ret.Get(0).(func(*route53.GetTrafficPolicyInput) route53.GetTrafficPolicyRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.GetTrafficPolicyRequest)
	}

	return r0
}

// ListGeoLocationsRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListGeoLocationsRequest(_a0 *route53.ListGeoLocationsInput) route53.ListGeoLocationsRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListGeoLocationsRequest
	if rf, ok := ret.Get(0).(func(*route53.ListGeoLocationsInput) route53.ListGeoLocationsRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListGeoLocationsRequest)
	}

	return r0
}

// ListHealthChecksRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListHealthChecksRequest(_a0 *route53.ListHealthChecksInput) route53.ListHealthChecksRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListHealthChecksRequest
	if rf, ok := ret.Get(0).(func(*route53.ListHealthChecksInput) route53.ListHealthChecksRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListHealthChecksRequest)
	}

	return r0
}

// ListHostedZonesByNameRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListHostedZonesByNameRequest(_a0 *route53.ListHostedZonesByNameInput) route53.ListHostedZonesByNameRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListHostedZonesByNameRequest
	if rf, ok := ret.Get(0).(func(*route53.ListHostedZonesByNameInput) route53.ListHostedZonesByNameRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListHostedZonesByNameRequest)
	}

	return r0
}

// ListHostedZonesRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListHostedZonesRequest(_a0 *route53.ListHostedZonesInput) route53.ListHostedZonesRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListHostedZonesRequest
	if rf, ok := ret.Get(0).(func(*route53.ListHostedZonesInput) route53.ListHostedZonesRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListHostedZonesRequest)
	}

	return r0
}

// ListQueryLoggingConfigsRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListQueryLoggingConfigsRequest(_a0 *route53.ListQueryLoggingConfigsInput) route53.ListQueryLoggingConfigsRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListQueryLoggingConfigsRequest
	if rf, ok := ret.Get(0).(func(*route53.ListQueryLoggingConfigsInput) route53.ListQueryLoggingConfigsRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListQueryLoggingConfigsRequest)
	}

	return r0
}

// ListResourceRecordSetsRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListResourceRecordSetsRequest(_a0 *route53.ListResourceRecordSetsInput) route53.ListResourceRecordSetsRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListResourceRecordSetsRequest
	if rf, ok := ret.Get(0).(func(*route53.ListResourceRecordSetsInput) route53.ListResourceRecordSetsRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListResourceRecordSetsRequest)
	}

	return r0
}

// ListReusableDelegationSetsRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListReusableDelegationSetsRequest(_a0 *route53.ListReusableDelegationSetsInput) route53.ListReusableDelegationSetsRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListReusableDelegationSetsRequest
	if rf, ok := ret.Get(0).(func(*route53.ListReusableDelegationSetsInput) route53.ListReusableDelegationSetsRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListReusableDelegationSetsRequest)
	}

	return r0
}

// ListTagsForResourceRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListTagsForResourceRequest(_a0 *route53.ListTagsForResourceInput) route53.ListTagsForResourceRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListTagsForResourceRequest
	if rf, ok := ret.Get(0).(func(*route53.ListTagsForResourceInput) route53.ListTagsForResourceRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListTagsForResourceRequest)
	}

	return r0
}

// ListTagsForResourcesRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListTagsForResourcesRequest(_a0 *route53.ListTagsForResourcesInput) route53.ListTagsForResourcesRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListTagsForResourcesRequest
	if rf, ok := ret.Get(0).(func(*route53.ListTagsForResourcesInput) route53.ListTagsForResourcesRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListTagsForResourcesRequest)
	}

	return r0
}

// ListTrafficPoliciesRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListTrafficPoliciesRequest(_a0 *route53.ListTrafficPoliciesInput) route53.ListTrafficPoliciesRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListTrafficPoliciesRequest
	if rf, ok := ret.Get(0).(func(*route53.ListTrafficPoliciesInput) route53.ListTrafficPoliciesRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListTrafficPoliciesRequest)
	}

	return r0
}

// ListTrafficPolicyInstancesByHostedZoneRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListTrafficPolicyInstancesByHostedZoneRequest(_a0 *route53.ListTrafficPolicyInstancesByHostedZoneInput) route53.ListTrafficPolicyInstancesByHostedZoneRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListTrafficPolicyInstancesByHostedZoneRequest
	if rf, ok := ret.Get(0).(func(*route53.ListTrafficPolicyInstancesByHostedZoneInput) route53.ListTrafficPolicyInstancesByHostedZoneRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListTrafficPolicyInstancesByHostedZoneRequest)
	}

	return r0
}

// ListTrafficPolicyInstancesByPolicyRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListTrafficPolicyInstancesByPolicyRequest(_a0 *route53.ListTrafficPolicyInstancesByPolicyInput) route53.ListTrafficPolicyInstancesByPolicyRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListTrafficPolicyInstancesByPolicyRequest
	if rf, ok := ret.Get(0).(func(*route53.ListTrafficPolicyInstancesByPolicyInput) route53.ListTrafficPolicyInstancesByPolicyRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListTrafficPolicyInstancesByPolicyRequest)
	}

	return r0
}

// ListTrafficPolicyInstancesRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListTrafficPolicyInstancesRequest(_a0 *route53.ListTrafficPolicyInstancesInput) route53.ListTrafficPolicyInstancesRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListTrafficPolicyInstancesRequest
	if rf, ok := ret.Get(0).(func(*route53.ListTrafficPolicyInstancesInput) route53.ListTrafficPolicyInstancesRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListTrafficPolicyInstancesRequest)
	}

	return r0
}

// ListTrafficPolicyVersionsRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListTrafficPolicyVersionsRequest(_a0 *route53.ListTrafficPolicyVersionsInput) route53.ListTrafficPolicyVersionsRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListTrafficPolicyVersionsRequest
	if rf, ok := ret.Get(0).(func(*route53.ListTrafficPolicyVersionsInput) route53.ListTrafficPolicyVersionsRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListTrafficPolicyVersionsRequest)
	}

	return r0
}

// ListVPCAssociationAuthorizationsRequest provides a mock function with given fields: _a0
func (_m *Route53API) ListVPCAssociationAuthorizationsRequest(_a0 *route53.ListVPCAssociationAuthorizationsInput) route53.ListVPCAssociationAuthorizationsRequest {
	ret := _m.Called(_a0)

	var r0 route53.ListVPCAssociationAuthorizationsRequest
	if rf, ok := ret.Get(0).(func(*route53.ListVPCAssociationAuthorizationsInput) route53.ListVPCAssociationAuthorizationsRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.ListVPCAssociationAuthorizationsRequest)
	}

	return r0
}

// TestDNSAnswerRequest provides a mock function with given fields: _a0
func (_m *Route53API) TestDNSAnswerRequest(_a0 *route53.TestDNSAnswerInput) route53.TestDNSAnswerRequest {
	ret := _m.Called(_a0)

	var r0 route53.TestDNSAnswerRequest
	if rf, ok := ret.Get(0).(func(*route53.TestDNSAnswerInput) route53.TestDNSAnswerRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.TestDNSAnswerRequest)
	}

	return r0
}

// UpdateHealthCheckRequest provides a mock function with given fields: _a0
func (_m *Route53API) UpdateHealthCheckRequest(_a0 *route53.UpdateHealthCheckInput) route53.UpdateHealthCheckRequest {
	ret := _m.Called(_a0)

	var r0 route53.UpdateHealthCheckRequest
	if rf, ok := ret.Get(0).(func(*route53.UpdateHealthCheckInput) route53.UpdateHealthCheckRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.UpdateHealthCheckRequest)
	}

	return r0
}

// UpdateHostedZoneCommentRequest provides a mock function with given fields: _a0
func (_m *Route53API) UpdateHostedZoneCommentRequest(_a0 *route53.UpdateHostedZoneCommentInput) route53.UpdateHostedZoneCommentRequest {
	ret := _m.Called(_a0)

	var r0 route53.UpdateHostedZoneCommentRequest
	if rf, ok := ret.Get(0).(func(*route53.UpdateHostedZoneCommentInput) route53.UpdateHostedZoneCommentRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.UpdateHostedZoneCommentRequest)
	}

	return r0
}

// UpdateTrafficPolicyCommentRequest provides a mock function with given fields: _a0
func (_m *Route53API) UpdateTrafficPolicyCommentRequest(_a0 *route53.UpdateTrafficPolicyCommentInput) route53.UpdateTrafficPolicyCommentRequest {
	ret := _m.Called(_a0)

	var r0 route53.UpdateTrafficPolicyCommentRequest
	if rf, ok := ret.Get(0).(func(*route53.UpdateTrafficPolicyCommentInput) route53.UpdateTrafficPolicyCommentRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.UpdateTrafficPolicyCommentRequest)
	}

	return r0
}

// UpdateTrafficPolicyInstanceRequest provides a mock function with given fields: _a0
func (_m *Route53API) UpdateTrafficPolicyInstanceRequest(_a0 *route53.UpdateTrafficPolicyInstanceInput) route53.UpdateTrafficPolicyInstanceRequest {
	ret := _m.Called(_a0)

	var r0 route53.UpdateTrafficPolicyInstanceRequest
	if rf, ok := ret.Get(0).(func(*route53.UpdateTrafficPolicyInstanceInput) route53.UpdateTrafficPolicyInstanceRequest); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(route53.UpdateTrafficPolicyInstanceRequest)
	}

	return r0
}

// WaitUntilResourceRecordSetsChanged provides a mock function with given fields: _a0
func (_m *Route53API) WaitUntilResourceRecordSetsChanged(_a0 *route53.GetChangeInput) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*route53.GetChangeInput) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// WaitUntilResourceRecordSetsChangedWithContext provides a mock function with given fields: _a0, _a1, _a2
func (_m *Route53API) WaitUntilResourceRecordSetsChangedWithContext(_a0 aws.Context, _a1 *route53.GetChangeInput, _a2 ...aws.WaiterOption) error {
	_va := make([]interface{}, len(_a2))
	for _i := range _a2 {
		_va[_i] = _a2[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _a0, _a1)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(aws.Context, *route53.GetChangeInput, ...aws.WaiterOption) error); ok {
		r0 = rf(_a0, _a1, _a2...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
